import asyncio
import logging
from aiogram import Bot, Dispatcher, F
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton
from aiogram.enums import ParseMode
from aiogram.client.default import DefaultBotProperties

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞
API_TOKEN = "-----------------------------------"
bot = Bot(
    token=API_TOKEN,
    default=DefaultBotProperties(parse_mode=ParseMode.HTML)
)
dp = Dispatcher()

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã
def get_start_menu() -> ReplyKeyboardMarkup:
    return ReplyKeyboardMarkup(
        keyboard=[
            [
                KeyboardButton(text="üë§ –ü—Ä–æ—Ñ–∏–ª—å"),
                KeyboardButton(text="üë• –ì—Ä—É–ø–ø—ã"),
            ],
            [
                KeyboardButton(text="üé≠ –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è"),
                KeyboardButton(text="‚ÑπÔ∏è –ü–æ–º–æ—â—å"),
            ]
        ],
        resize_keyboard=True,
        input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª...",
    )

def get_profile_menu() -> ReplyKeyboardMarkup:
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üìä –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")],
            [KeyboardButton(text="üìù –ú–æ–∏ –∑–∞–ø–∏—Å–∏")],
            [KeyboardButton(text="üîô –ù–∞–∑–∞–¥")],
        ],
        resize_keyboard=True,
    )

def get_groups_menu() -> ReplyKeyboardMarkup:
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üìö –í—Å–µ –≥—Ä—É–ø–ø—ã")],
            [KeyboardButton(text="‚ûï –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –≤ –≥—Ä—É–ø–ø—É")],
            [KeyboardButton(text="üîô –ù–∞–∑–∞–¥")],
        ],
        resize_keyboard=True,
    )

def get_events_menu() -> ReplyKeyboardMarkup:
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üìÖ –ë–ª–∏–∂–∞–π—à–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è")],
            [KeyboardButton(text="üéü –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ")],
            [KeyboardButton(text="üîô –ù–∞–∑–∞–¥")],
        ],
        resize_keyboard=True,
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
@dp.message(CommandStart())
async def command_start_handler(message: Message) -> None:
    welcome_text = (
        f"–ü—Ä–∏–≤–µ—Ç, <b>{message.from_user.full_name}</b>! üëã\n\n"
        "–Ø –±–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≥—Ä—É–ø–ø–∞–º–∏ –∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è–º–∏.\n"
        "–° –º–æ–µ–π –ø–æ–º–æ—â—å—é —Ç—ã –º–æ–∂–µ—à—å:\n"
        "- –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≥—Ä—É–ø–ø—ã –∏ –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å—Å—è –≤ –Ω–∏—Ö\n"
        "- –£–∑–Ω–∞–≤–∞—Ç—å –æ –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö\n"
        "- –£–ø—Ä–∞–≤–ª—è—Ç—å —Å–≤–æ–∏–º –ø—Ä–æ—Ñ–∏–ª–µ–º\n\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π –º–µ–Ω—é –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏."
    )
    await message.answer(welcome_text, reply_markup=get_start_menu())

@dp.message(Command("help"))
async def command_help_handler(message: Message) -> None:
    help_text = (
        "<b>–°–ø—Ä–∞–≤–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>\n\n"
        "<b>üë§ –ü—Ä–æ—Ñ–∏–ª—å</b> - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–µ–º –∞–∫–∫–∞—É–Ω—Ç–µ, —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –∑–∞–ø–∏—Å–∏\n"
        "<b>üë• –ì—Ä—É–ø–ø—ã</b> - —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≥—Ä—É–ø–ø –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–ø–∏—Å–∏\n"
        "<b>üé≠ –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è</b> - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö —Å–æ–±—ã—Ç–∏—è—Ö\n\n"
        "–î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É <b>üîô –ù–∞–∑–∞–¥</b>"
    )
    await message.answer(help_text)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫
@dp.message(F.text == "üîô –ù–∞–∑–∞–¥")
async def back_to_main_menu(message: Message):
    await message.answer("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=get_start_menu())

@dp.message(F.text == "üë§ –ü—Ä–æ—Ñ–∏–ª—å")
async def profile_menu(message: Message):
    menu_text = (
        "<b>–ú–µ–Ω—é –ø—Ä–æ—Ñ–∏–ª—è:</b>\n\n"
        "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ:\n"
        "- –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É\n"
        "- –£–≤–∏–¥–µ—Ç—å —Å–≤–æ–∏ —Ç–µ–∫—É—â–∏–µ –∑–∞–ø–∏—Å–∏\n"
        "- –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è"
    )
    await message.answer(menu_text, reply_markup=get_profile_menu())

@dp.message(F.text == "üë• –ì—Ä—É–ø–ø—ã")
async def groups_menu(message: Message):
    menu_text = (
        "<b>–ú–µ–Ω—é –≥—Ä—É–ø–ø:</b>\n\n"
        "–î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:\n"
        "- –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≥—Ä—É–ø–ø\n"
        "- –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –≤ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –≤–∞—Å –≥—Ä—É–ø–ø—É\n"
        "- –£–ø—Ä–∞–≤–ª—è—Ç—å —Å–≤–æ–∏–º–∏ —Ç–µ–∫—É—â–∏–º–∏ –≥—Ä—É–ø–ø–∞–º–∏"
    )
    await message.answer(menu_text, reply_markup=get_groups_menu())

@dp.message(F.text == "üé≠ –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è")
async def events_menu(message: Message):
    menu_text = (
        "<b>–ú–µ–Ω—é –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π:</b>\n\n"
        "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ:\n"
        "- –£–∑–Ω–∞—Ç—å –æ –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö\n"
        "- –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ —Å–æ–±—ã—Ç–∏—è\n"
        "- –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–∏ —Ç–µ–∫—É—â–∏–µ –∑–∞–ø–∏—Å–∏"
    )
    await message.answer(menu_text, reply_markup=get_events_menu())

# –ü–æ–¥–º–µ–Ω—é –ø—Ä–æ—Ñ–∏–ª—è
@dp.message(F.text == "üìä –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
async def my_stats(message: Message):
    stats_text = (
        "<b>–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>\n\n"
        "üìå <b>–ì—Ä—É–ø–ø—ã:</b> 3\n"
        "üìå <b>–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è:</b> 5\n"
        "üìå <b>–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:</b> –≤—ã—Å–æ–∫–∞—è\n\n"
        "–í—ã –æ—á–µ–Ω—å –∞–∫—Ç–∏–≤–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å!"
    )
    await message.answer(stats_text)

@dp.message(F.text == "üìù –ú–æ–∏ –∑–∞–ø–∏—Å–∏")
async def my_records(message: Message):
    records_text = (
        "<b>–í–∞—à–∏ —Ç–µ–∫—É—â–∏–µ –∑–∞–ø–∏—Å–∏:</b>\n\n"
        "üë• <b>–ì—Ä—É–ø–ø—ã:</b>\n"
        "- –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ Python\n"
        "- –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö\n"
        "- –ê–Ω–≥–ª–∏–π—Å–∫–∏–π intermediate\n\n"
        "üé≠ <b>–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è:</b>\n"
        "- –í—Å—Ç—Ä–µ—á–∞ IT-—Å–æ–æ–±—â–µ—Å—Ç–≤–∞ (15.06)\n"
        "- –ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å –ø–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ (20.06)"
    )
    await message.answer(records_text)

# –ü–æ–¥–º–µ–Ω—é –≥—Ä—É–ø–ø
@dp.message(F.text == "üìö –í—Å–µ –≥—Ä—É–ø–ø—ã")
async def all_groups(message: Message):
    groups_text = (
        "<b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –≥—Ä—É–ø–ø—ã:</b>\n\n"
        "1. <b>–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ Python</b>\n"
        "   üïí –í—Ç/–ß—Ç 19:00-21:00\n"
        "   üë®‚Äçüè´ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å: –ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤\n\n"
        "2. <b>–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö</b>\n"
        "   üïí –ü–Ω/–°—Ä 18:00-20:00\n"
        "   üë®‚Äçüè´ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å: –ê–Ω–Ω–∞ –°–∏–¥–æ—Ä–æ–≤–∞\n\n"
        "3. <b>–ê–Ω–≥–ª–∏–π—Å–∫–∏–π intermediate</b>\n"
        "   üïí –ü–Ω/–°—Ä/–ü—Ç 17:00-19:00\n"
        "   üë®‚Äçüè´ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å: –î–∂–æ–Ω –°–º–∏—Ç"
    )
    await message.answer(groups_text)

@dp.message(F.text == "‚ûï –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –≤ –≥—Ä—É–ø–ø—É")
async def join_group(message: Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É –∏–∑ —Å–ø–∏—Å–∫–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏ (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)")

# –ü–æ–¥–º–µ–Ω—é –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π
@dp.message(F.text == "üìÖ –ë–ª–∏–∂–∞–π—à–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è")
async def upcoming_events(message: Message):
    events_text = (
        "<b>–ë–ª–∏–∂–∞–π—à–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è:</b>\n\n"
        "1. <b>–í—Å—Ç—Ä–µ—á–∞ IT-—Å–æ–æ–±—â–µ—Å—Ç–≤–∞</b>\n"
        "   üìÖ 15 –∏—é–Ω—è 2024\n"
        "   üïí 19:00-22:00\n"
        "   üìç –ö–æ–≤–æ—Ä–∫–∏–Ω–≥ \"–¢–µ—Ö–Ω–æ–≥—Ä–∞–¥\"\n\n"
        "2. <b>–ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å –ø–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏</b>\n"
        "   üìÖ 20 –∏—é–Ω—è 2024\n"
        "   üïí 18:00-21:00\n"
        "   üìç –§–æ—Ç–æ—Å—Ç—É–¥–∏—è \"–û–±—ä–µ–∫—Ç–∏–≤\"\n\n"
        "3. <b>–Ø–∑—ã–∫–æ–≤–æ–π –∫–ª—É–±: –ê–Ω–≥–ª–∏–π—Å–∫–∏–π</b>\n"
        "   üìÖ 25 –∏—é–Ω—è 2024\n"
        "   üïí 17:00-19:00\n"
        "   üìç –ö–∞—Ñ–µ \"–õ–æ–Ω–¥–æ–Ω\""
    )
    await message.answer(events_text)

@dp.message(F.text == "üéü –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ")
async def join_event(message: Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏ (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main() -> None:
    await dp.start_polling(bot)

if __name__ == "__main__":
    logging.basicConfig(level=logging.INFO)
    asyncio.run(main())